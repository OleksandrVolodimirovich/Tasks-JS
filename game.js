/*
!Завдання 5.
!Суперник (комп'ютер, наприклад), загадує чотиризначний число, в якому не повторюються цифри. Ваше завдання - вгадати його. Число ходів можна обмежити.
!Підказками виступають «корови» (якщо цифра вгадана, а її позиція - ні) і «бики» (коли збігається і цифра, і її позиція). Якщо загадане число «1234», а ви називаєте «6531» -
!результатом буде одна корова (цифра «1») і один бик (цифра «3»).
!Спроби відгадати число йдуть через діалогове вікно - prompt. Браузер повідомляє, більше або
!менше задуманого числа запропонований варіант.\
!  Алгоритм буде таким:
!1. Браузер генерує число і запрошує користувача в гру.
!2. Виводиться вікно запиту припущення.
!3. Браузер перевіряє число і повертає результат.
!4. Так повторюється до тих пір, поки число не вгадають.
!5. Як тільки це трапляється, браузер скидає кількість спроб і генерує нове число.
*/

var number = []; // масив в якому знаходяться 4 унікольні цифри
var attempts = 0; //лічильник спроб

generateNuumber(); //згенеровані неповторні значення масиву
alert(number.join('')); //перетворення масиву в рядок. Виводить унікальні числа на екран, поки гра знаходиться в тестовому режимі
guessNumber();

function generateNuumber(){ //створив ф-цію котра генерує неповторні значення
    var min = 1;  //задав мінімальне значення
    var max = 9;  //задав максимальне значення

    for(var i = 0; i<4; i++){ //запускаємо цикл, який виконується 4 рази
        var part = Math.round(Math.random() * (max - min) + min); //задопомомогою Math.random шукаємо випадкові числа від 1 до 9,
                                                                //а задопомогою Math.round завкруглюємо числа до бижчого цілого. (Н-д:5)
        if(i==0){ //якщо цикл запустився в перше і=0,
            number[0] = part; //тоді в масив записується унікальне число з part
        } else { // але якщо в масиві number[] вже є числа,
            while(number.indexOf(part) != -1){ //в такому випадку робимо провірку на унікальність.
                                            //тобто якщо indexOf(part)-шукає елемент в масиві number і якщо не дорівнює -1(відсутній елемент)
                                            //а в моєму випадку при застосуванні ! протилежний, значить присутнє число(значить якщо число є воно непідходить)
                part = Math.round(Math.random() * (max - min) + min);//так,як число є потрібно преоприділити part тому цикл
            }                                                       //while працює доки незнайде унікальне число
            number[i] = part;//коли цикл while знайде унікальне число відбувається запис в масив number[i] і відповідно записується в змінну number = []
        }
    }
}
function guessNumber(){ //в цій ф-ції гравця прошу ввести число
    var result = prompt('Введіть число (-1 закінчити гру)', 0);
    var gameIsRunning = true; //провірка на те,що гра йде

    //поки гравець грає
    while(gameIsRunning){ //поки гра запущена буду робити провірку
        //вихід з гри
        if(parseInt(result) == -1){ //якщо гравець ввів -1, 
            gameIsRunning = false; //тоді гра завершена
        }
        //гравець ввів некоректні дані
        else if (parseInt(result) == 0 || isNaN(parseInt(result))){ //якщо ввели 0 або некоректні дані. 
                                                            //isNaN(не є числом): число-false, рядок-true
                                                            //parseInt(перетворює в число): число-дає число, рядок-NaN
            alert('Ви не ввели число'); //умова-true прошу ввести число
            //повторний запит
            result = prompt('Введіть число (-1 закінчити гру)', 0); //повторюється до тих пір поки гравець невведе числа
            
        }
        //провіряє число
        else{ //якщо ввели число
            var answer = checkNumber(result); //запускаю ф-цію checkNumber(дані які ввів гравець) і її передаємо в result(рядок з цифрами)
            if(answer[0]){
                //число вгадано
                alert('Вітаємо! Ви вгадали число. К-сть спроб: ' + attempts);
                //зупиняє гру
                gameIsRunning = false;
            }
            else{
                //наступний хід
                result = prompt('Бики: ' + answer[1] + ' Корови: ' + answer[2] + ' Введіть число (-1 закінчити гру)', 0);
            }
        }
    }
}
function checkNumber(myresult){//ф-ція в яку заносяться дані які ввів гравець. Н-д:1234
    //'1234'.split('') => [1234]
    //кожна перевірка збільшує к-сть спроб на 1
    attempts++; //лічильник спроб
    //масив результату
    // 0 - загальний результат
    // 1 - бики
    // 2 - корови
    var answer = [false, 0, 0]; //по замовчуванню false-числа невгадані, 0-лічильник биків, 0-лічильник корів
    //розкладаємо число на розряди
    console.log(myresult); //для тесту те, що ввів гравець
    console.log(number); //для тесту те, що потрібно вгадати

    // s='1, 2, 3, 4';
    // mas=s.split('')

    var ranks = myresult.split(''); //числа(myresult), які ввів гравець перетворю в масив(split)
    for(var i=0; i<ranks.length; i++) { //після перетворення запускаю цикл, в якому обходимо масив[ranks] перебираючи кожну цифру
        //якщо по індексу значення співпадають, то це бик
        if(parseInt(ranks[i]) == number[i]){ //в цій умові порівнюю кожну цифру яку ввів гравець з унікальними цифрами
            answer[1]++; //якщо умова вірна(true) тоді лічильник биків збільшую на 1
        }
        //якщо число присутнє в масиві, то це корова
        else if(number.indexOf(parseInt(ranks[i])) != -1){ //якщо в умові вище індекси не співпали, тоді в масиві number[]
                                                        //шукаємо елемент з масиву ranks[i], 
                                                        //(!= -1) - яущо після пошуку видає (-1) тоді елемента не має,
                                                        //а якщо щось інше наприклад індекс тоді +1 коровам
            answer[2]++;// якщо знайдемо тоді буде (true), збільшуємо лічильник корів на 1
        }
    }
    //якщо набралося 4 бика, то це перемога
    if(answer[1] == 4){ //якщо гравець вказава вірні 4 цифри
        answer[0] = true; //значить гравець виграв
    }
    return answer; //повертаю масив в checkNumber(result) ^^^
}
